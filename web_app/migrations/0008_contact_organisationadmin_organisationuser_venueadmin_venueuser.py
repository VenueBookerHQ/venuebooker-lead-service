# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2017-03-02 20:04
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        ('web_app', '0007_auto_20170228_2317'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('surname', models.CharField(max_length=30, verbose_name='surname')),
                ('telephone', models.CharField(blank=True, max_length=15, verbose_name='telephone')),
                ('mobile', models.CharField(blank=True, max_length=15, verbose_name='mobile')),
                ('email', models.EmailField(max_length=50, verbose_name='email')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationAdmin',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_app.Organisation')),
            ],
            options={
                'ordering': ['name'],
                'permissions': (('access_group_list', 'Can access group list'), ('access_group', 'Can access group')),
            },
            bases=('auth.group',),
        ),
        migrations.CreateModel(
            name='OrganisationUser',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_app.Organisation')),
            ],
            options={
                'ordering': ['name'],
                'permissions': (('access_group_list', 'Can access group list'), ('access_group', 'Can access group')),
            },
            bases=('auth.group',),
        ),
        migrations.CreateModel(
            name='VenueAdmin',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_app.Venue')),
            ],
            options={
                'ordering': ['name'],
                'permissions': (('access_group_list', 'Can access group list'), ('access_group', 'Can access group')),
            },
            bases=('auth.group',),
        ),
        migrations.CreateModel(
            name='VenueUser',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_app.Venue')),
            ],
            options={
                'ordering': ['name'],
                'permissions': (('access_group_list', 'Can access group list'), ('access_group', 'Can access group')),
            },
            bases=('auth.group',),
        ),
    ]
